// Code generated by "stringer -output=strings.go -type=Manufacturer,Memory -linecomment"; DO NOT EDIT.

package legacy

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Egoman-0]
	_ = x[SonyUK-1]
	_ = x[Qisda-2]
	_ = x[Embest-3]
}

const _Manufacturer_name = "EgomanSony UKQisdaEmbest"

var _Manufacturer_index = [...]uint8{0, 6, 13, 18, 24}

func (i Manufacturer) String() string {
	if i >= Manufacturer(len(_Manufacturer_index)-1) {
		return "Manufacturer(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Manufacturer_name[_Manufacturer_index[i]:_Manufacturer_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[M256-0]
	_ = x[M512-1]
}

const _Memory_name = "256MB512MB"

var _Memory_index = [...]uint8{0, 5, 10}

func (i Memory) String() string {
	if i >= Memory(len(_Memory_index)-1) {
		return "Memory(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Memory_name[_Memory_index[i]:_Memory_index[i+1]]
}
